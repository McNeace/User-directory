{"version":3,"sources":["components/Header.js","components/EmployeeList.js","utils/API.js","components/MainContainer.js","App.js","index.js"],"names":["Header","props","className","id","onChange","event","search","target","value","EmployeeList","this","users","map","employee","i","key","src","picture","thumbnail","aria-hidden","alt","name","first","last","email","cell","Component","getUsers","axios","get","MainContainer","state","filteredUsers","term","filteredEmployees","filter","includes","setState","then","res","data","results","React","App","ReactDOM","render","document","getElementById"],"mappings":"wOA+BeA,MA5Bf,SAAgBC,GACZ,OAEI,6BACI,yBAAKC,UAAU,6BACX,yBAAKA,UAAU,oBACX,wBAAIA,UAAU,WAAd,6BACA,uBAAGA,UAAU,UAAb,qBAGR,0BAAMA,UAAU,kBACZ,yBAAKA,UAAU,cACX,iDAAsB,8BACtB,2BAAOA,UAAU,eAAeC,GAAG,oBAAoBC,SAAU,SAACC,GAAYJ,EAAMK,OAAOD,EAAME,OAAOC,WAE5G,yBAAKN,UAAU,cACX,kDAAuB,8BACvB,2BAAOA,UAAU,eAAeC,GAAG,oBAAoBC,SAAU,SAACC,GAAYJ,EAAMK,OAAOD,EAAME,OAAOC,WAE5G,yBAAKN,UAAU,cACX,yDAA8B,8BAC9B,2BAAOA,UAAU,eAAeC,GAAG,oBAAoBC,SAAU,SAACC,GAAYJ,EAAMK,OAAOD,EAAME,OAAOC,cCgB7GC,E,uKAnCP,OAEI,2BAAOP,UAAU,SACb,2BAAOA,UAAU,mBAGjB,2BAAOA,UAAU,iBACZQ,KAAKT,MAAMU,MAAMC,KAAI,SAACC,EAAUC,GAC7B,OACI,wBAAIZ,UAAU,UAAUa,IAAKD,GACzB,4BAEI,yBAAKZ,UAAU,iBAAiBc,IAAKH,EAASI,QAAQC,UAAWC,eAAA,EAAYC,IAAI,WAGrF,wBAAIlB,UAAU,iBACTW,EAASQ,KAAKC,MAAQ,IAAMT,EAASQ,KAAKE,MAE/C,4BAEKV,EAASW,OAEd,4BAEKX,EAASY,gB,GA1BnBC,a,iBCKZC,MAJf,WACI,OAAOC,IAAMC,IAHL,0CC0CGC,E,4MArCXC,MAAQ,CACJpB,MAAO,GACPqB,cAAe,I,EAanB1B,OAAS,SAAC2B,GACN,IAAMC,EAAoB,EAAKH,MAAMpB,MAAMwB,QAAO,SAACtB,GAC/C,GAAIA,EAASY,KAAKW,SAASH,KAAUpB,EAASQ,KAAKC,MAAQ,IAAMT,EAASQ,KAAKE,MAAMa,SAASH,IAASpB,EAASW,MAAMY,SAASH,GAC3H,OAAOpB,KAMf,EAAKwB,SAAS,CAAEL,cAAeE,K,kEAjBd,IAAD,OAChBP,IAAWW,MAAK,SAACC,GACb,EAAKF,SAAS,CAAE1B,MAAO4B,EAAIC,KAAKC,QAAST,cAAeO,EAAIC,KAAKC,e,+BAmBrE,OACI,6BACI,kBAAC,EAAD,CAAQnC,OAAQI,KAAKJ,SACrB,kBAAC,EAAD,CAAcK,MAAOD,KAAKqB,MAAMC,qB,GAhCpBU,IAAMhB,WCMnBiB,MARf,WACI,OACI,6BACI,kBAAC,EAAD,QCHZC,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.9dd24313.chunk.js","sourcesContent":["import React from \"react\";\nimport \"../App.css\";\n\nfunction Header(props) {\n    return (\n        // more JSX in header component\n        <div>\n            <div className=\"jumbotron jumbotron-fluid\">\n                <div className=\"header-container\">\n                    <h1 className=\"display\">Random Employee Directory</h1>\n                    <p className=\"header\">Employee Search</p>\n                </div>\n            </div>\n            <form className=\"form-container\">\n                <div className=\"form-group\">\n                    <label>Search by Name:<br></br></label>\n                    <input className=\"form-control\" id=\"formControlInput1\" onChange={(event) => { props.search(event.target.value) }} />\n                </div>\n                <div className=\"form-group\">\n                    <label>Search by Email:<br></br></label>\n                    <input className=\"form-control\" id=\"formControlInput1\" onChange={(event) => { props.search(event.target.value) }} />\n                </div>\n                <div className=\"form-group\">\n                    <label>Search by Phone Number:<br></br></label>\n                    <input className=\"form-control\" id=\"formControlInput1\" onChange={(event) => { props.search(event.target.value) }} />\n                </div>\n            </form>\n        </div>\n    )\n}\n\nexport default Header;","import React, { Component } from \"react\";\nimport \"../App.css\";\n\nclass EmployeeList extends Component {\n    render() {\n        return (\n            // returns table in JSX\n            <table className=\"table\">\n                <thead className=\"employee-table\">\n                </thead>\n                {/* map() method creates a new array populated with the results from data obtained */}\n                <tbody className=\"employee-data\">\n                    {this.props.users.map((employee, i) => {\n                        return (\n                            <tr className=\"results\" key={i}>\n                                <td>\n                                    {/* thumbnail image */}\n                                    <img className=\"employee-image\" src={employee.picture.thumbnail} aria-hidden alt=\"Image\" />\n                                </td>\n                                {/* name - first and last */}\n                                <td className=\"employee-name\">\n                                    {employee.name.first + \" \" + employee.name.last}\n                                </td>\n                                <td>\n                                    {/* email */}\n                                    {employee.email}\n                                </td>\n                                <td>\n                                    {/* phone */}\n                                    {employee.cell}\n                                </td>\n                            </tr>\n                        )\n                    })}\n                </tbody>\n            </table>\n        )\n    }\n}\n\nexport default EmployeeList;","import axios from \"axios\";\n\nconst url = \"https://randomuser.me/api/?results=10\"\n\nfunction getUsers() {\n    return axios.get(url);\n}\n\nexport default getUsers;","import React from \"react\";\nimport Header from \"./Header\";\nimport EmployeeList from \"./EmployeeList\";\nimport getUsers from \"../utils/API\";\n\n// container fetches data and renders cooresponding subcomponent\nclass MainContainer extends React.Component {\n    state = {\n        users: [],\n        filteredUsers: []\n    }\n\n    // component mounts when it is created and first inserted into the DOM \n    // i.e when it is rendered for the first time\n    componentDidMount() {\n        getUsers().then((res) => {\n            this.setState({ users: res.data.results, filteredUsers: res.data.results })\n        })\n    }\n\n    // defining function to search employees by checking whether or not property searched for is\n    // included in the array of data\n    search = (term) => {\n        const filteredEmployees = this.state.users.filter((employee) => {\n            if (employee.cell.includes(term) || (employee.name.first + \" \" + employee.name.last).includes(term) || employee.email.includes(term)) {\n                return employee\n            }\n        });\n        // passing an object to setState(). \n        // the object contains the part of the state we want to update \n        // which = the value of filteredUsers\n        this.setState({ filteredUsers: filteredEmployees });\n    }\n    // renders components to the dom using props\n    render() {\n        return (\n            <div>\n                <Header search={this.search} />\n                <EmployeeList users={this.state.filteredUsers} />\n            </div>\n        )\n    }\n}\n\nexport default MainContainer;","import React from \"react\";\nimport MainContainer from \"./components/MainContainer.js\";\nimport \"./App.css\";\n\nfunction App() {\n    return (\n        <div>\n            <MainContainer />\n        </div>\n    );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}